@using System.Security.Claims
@using MellmothJdr.DAL.Entities
@using MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies

@inherits FichePersoChroniqueOublieFormComponent;

@if (IsReady)
{
    <BaseFichePersoForm BaseFichePerso="FichePersoChroniquesOublies" Races="@Races" @ref="FormBase" />

    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Class="pa-4  mt-4">
                <MudForm Model="@BaseFichePerso" Spacing="4" @ref="Form">
                    <MudGrid>
                        <MudItem xs="12" sm="6">
                            <MudSelect T="Classe" Label="@Texte.Classe" MultiSelection="false" @bind-Value="ClasseSelected" @bind-Value:after="ApplySelectedCultureAsync" RequiredError="@string.Format(Texte.FormatIsRequired,Texte.Classe)"
                                       AnchorOrigin="Origin.BottomCenter">
                                @foreach (Classe classe in Classes)
                                {
                                    <MudSelectItem T="Classe" Tooltip="" Value="@classe">
                                        <CustomTooltipWithImage SrcImage="@($"img/classe/{classe.Id}.jpg")" Titre="@classe.Libelle" Description="@classe.Description" Arrow="true" Placement="Placement.Right" Width="500" />
                                    </MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    </MudGrid>
                </MudForm>
            </MudPaper>
        </MudItem>

        @if (ClasseSelected != null)
        {
            <MudItem xs="12" sm="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@ClasseSelected.Libelle</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@ClasseSelected.Description</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Arme et armure</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@ClasseSelected.ArmeArmure</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Equipement de depart</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@ClasseSelected.ArmureStart +@ClasseSelected.ModificateurArmureStart</MudText>


                        <MudTable Items="@ClasseSelected.ArmesStarts" Class="c-mt-15" Dense="true" Hover="true" Bordered="true" Striped="true">
                            <HeaderContent>
                                <MudTh>Arme</MudTh>
                                <MudTh>Attaque</MudTh>
                                <MudTh>Critique</MudTh>
                                <MudTh>Porte</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Arme">@context.Libelle</MudTd>
                                <MudTd DataLabel="Attaque">@(context.DeAttaque.HasValue ? ((context.NumbreDeAttaque.HasValue ? $"{context.NumbreDeAttaque}" : "1") + "d" + context.DeAttaque) : "-")</MudTd>
                                <MudTd DataLabel="Critique">@(context.MinCritique.HasValue ? ($"{context.MinCritique}-20") : "20")</MudTd>
                                <MudTd DataLabel="Porte">@(context.PorteEnM.HasValue ? $"{context.PorteEnM}m" : "-")</MudTd>

                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
        @if (Voies.Count != 0)
        {
            <MudItem xs="12" sm="12">
                <MudPaper Class="pa-4 mt-4">
                    @if (Voies.Count != 0)
                    {
                        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">

                            @foreach (VoieChroniquesOublies voie in Voies)
                            {
                                <MudTabPanel Text="@voie.Libelle">
                                    <MudText>@voie.Libelle</MudText>
                                </MudTabPanel>
                            }
                        </MudTabs>
                    }
                </MudPaper>
            </MudItem>

        }
    </MudGrid>


    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Class="pa-4 mt-4">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@(Save)"
                           StartIcon="@Icons.Material.Filled.Save">@Texte.Save</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@(Back)" Class="mx-2"
                           StartIcon="@Icons.Material.Filled.Cancel">@Texte.Cancel</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
}
else
{

    <CustomLoader />
}
