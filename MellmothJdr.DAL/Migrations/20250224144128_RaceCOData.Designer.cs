// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransverseApiSessionCDR.Infrastructure;

#nullable disable

namespace MellmothJdr.DAL.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20250224144128_RaceCOData")]
    partial class RaceCOData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.FichePersoChroniquesOublies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<Guid?>("PartieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PoidKg")
                        .HasColumnType("int");

                    b.Property<int>("PvEnCours")
                        .HasColumnType("int");

                    b.Property<int>("PvMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RaceLibelle")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TailleCm")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.HasIndex("PartieId");

                    b.HasIndex("RaceId");

                    b.HasIndex("UserId");

                    b.ToTable("FichesPersoChroniquesOublies", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Jeu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Jeux", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fc4e9f5-e8a8-4269-9dbc-2e5c4af3b2b1"),
                            DateCrea = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le jeu de rôle Dungeons & Dragons consiste à narrer des aventures dans des mondes peuplés de guerriers et de magiciens. Tout comme les jeux où l'on s'amuse à faire semblant, D&D repose sur l'imagination.\r\n\r\nDans ce monde fantastique, les possibilités sont infinies.",
                            Nom = "Donjons & Dragons"
                        },
                        new
                        {
                            Id = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            DateCrea = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chroniques Oubliées, conçue pour la découverte du JdR, est la version modernisée et simplifiée (mais pas simpliste) du premier des jeux de rôle. Aux mécaniques de base viennent s'ajouter des \"briques\" modulaires, optionnelles, pour enrichir l'expérience de jeu.\r\n\r\nSi vous souhaitiez découvrir (ou faire découvrir) le jeu de rôle ou si vous êtes à la recherche d'un jeu rapide à mettre en place pour renouer avec le loisir, ne cherchez pas plus loin !\r\n\r\nChroniques Oubliées se décline aujourd'hui dans sa version Fantasy (univers médiéval-fantastique), Contemporain (multiples univers possibles couvrant la période 1900-2100 : horreur lovecraftienne, pulp, zombies, vampires, super-héros, espionnage, policier, cyberpunk...) et Galactique (univers de science-fiction en trois époques : Space Opera, temps de la colonisation galactique et Hard Science).",
                            Nom = "Chroniques Oublies"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("NombreParticipant")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.HasIndex("UserId");

                    b.ToTable("Parties", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RaceLibelle")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.ToTable("Races", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "La race la plus répandue, caractérisée par sa grande adaptabilité et sa diversité culturelle.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Humains"
                        },
                        new
                        {
                            Id = new Guid("9c8d7e6f-5b4a-1234-cde9-0f1e2d3c4b5a"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ces êtres longs-vivants, souvent subdivisés (par exemple en elfes sylvains ou des bois), se distinguent par leur élégance et leur lien étroit  avec la nature.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Elfique(s)"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-47a8-90ab-cdef12345678"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Robustes et endurants, les nains sont réputés pour leur expertise en artisanat et en forge ainsi que pour leur courage au combat.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Nains"
                        },
                        new
                        {
                            Id = new Guid("01234567-89ab-cdef-0123-456789abcdef"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Issus de l'union entre humains et elfes, ils héritent d'atouts de ces deux univers, alliant souplesse et polyvalence.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Demi-Elfes"
                        },
                        new
                        {
                            Id = new Guid("fedcba98-7654-3210-fedc-ba9876543210"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Petit peuple discret et ingénieux, reconnu pour sa capacité à se mouvoir sans être remarqué et à s'adapter à divers environnements.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Halfelins"
                        },
                        new
                        {
                            Id = new Guid("13579bdf-2468-ace0-bdf1-3579bdf24680"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Guerriers féroces, souvent en opposition avec les autres races, incarnant la force brute et l'esprit de combat.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Orques"
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff00"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Créatures rusées et agiles, généralement associées aux orques, mais possédant leur propre culture et méthodes de survie.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Gobelins"
                        },
                        new
                        {
                            Id = new Guid("abcdef12-3456-7890-abcd-ef1234567890"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Connus pour leur force exceptionnelle et leur capacité de régénération, ils représentent un défi de taille pour les aventuriers.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Trolls"
                        },
                        new
                        {
                            Id = new Guid("deadbeef-feed-face-cafe-babe12345678"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dotés de traits reptiliens et parfois liés à l'héritage des dragons, ces êtres apportent une dimension mystique et redoutable à l'univers.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Drakéides"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("ExterneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.FichePersoChroniquesOublies", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("FichesPersoChroniquesOublies")
                        .HasForeignKey("JeuId");

                    b.HasOne("MellmothJdr.DAL.Entities.Partie", "Partie")
                        .WithMany("FichePersoChroniqueOublies")
                        .HasForeignKey("PartieId");

                    b.HasOne("MellmothJdr.DAL.Entities.Race", "Race")
                        .WithMany("FichesPersoChroniquesOublies")
                        .HasForeignKey("RaceId");

                    b.HasOne("MellmothJdr.DAL.Entities.User", "User")
                        .WithMany("FichePersoChroniqueOublies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");

                    b.Navigation("Partie");

                    b.Navigation("Race");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("Parties")
                        .HasForeignKey("JeuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MellmothJdr.DAL.Entities.User", "User")
                        .WithMany("Parties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("Races")
                        .HasForeignKey("JeuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Jeu", b =>
                {
                    b.Navigation("FichesPersoChroniquesOublies");

                    b.Navigation("Parties");

                    b.Navigation("Races");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.Navigation("FichePersoChroniqueOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.Navigation("FichesPersoChroniquesOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.User", b =>
                {
                    b.Navigation("FichePersoChroniqueOublies");

                    b.Navigation("Parties");
                });
#pragma warning restore 612, 618
        }
    }
}
