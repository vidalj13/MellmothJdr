// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransverseApiSessionCDR.Infrastructure;

#nullable disable

namespace MellmothJdr.DAL.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20250312085640_ArmesetArmure")]
    partial class ArmesetArmure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MellmothJdr.DAL.Entities.ArmeStart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int?>("DeAttaque")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("MinCritique")
                        .HasColumnType("int");

                    b.Property<int?>("NumbreDeAttaque")
                        .HasColumnType("int");

                    b.Property<int?>("PorteEnM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.ToTable("ArmeStart", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("626b4cbc-24fd-4cf4-b0b8-6ce09644a9e1"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 10,
                            Libelle = "Pétoire",
                            NumbreDeAttaque = 1,
                            PorteEnM = 20
                        },
                        new
                        {
                            Id = new Guid("7b82ed7e-ba93-4373-939e-28ac1721c088"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 8,
                            Libelle = "Epée longue",
                            NumbreDeAttaque = 1
                        },
                        new
                        {
                            Id = new Guid("e71e64ca-b497-45dc-b4b3-40f89a28540e"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 4,
                            Libelle = "Dague",
                            NumbreDeAttaque = 1
                        },
                        new
                        {
                            Id = new Guid("bf7e1989-9173-4e2c-84c3-0a12f089c3e1"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 4,
                            Libelle = "Dague",
                            NumbreDeAttaque = 1
                        },
                        new
                        {
                            Id = new Guid("fd4b96f6-715a-43ab-9113-3cc1273aa66b"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 6,
                            Libelle = "Hache à 2 mains",
                            NumbreDeAttaque = 2
                        },
                        new
                        {
                            Id = new Guid("739f46e1-8ef3-4f2a-926a-b5a04ad8d867"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 6,
                            Libelle = "2 javelots",
                            NumbreDeAttaque = 1,
                            PorteEnM = 20
                        },
                        new
                        {
                            Id = new Guid("deedd7e0-f790-4ada-b987-d95b9c09d45b"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 6,
                            Libelle = "Rapiere",
                            MinCritique = 19,
                            NumbreDeAttaque = 1
                        },
                        new
                        {
                            Id = new Guid("9e473523-4c62-42c1-884b-e7f72048894a"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeAttaque = 4,
                            Libelle = "Dague",
                            NumbreDeAttaque = 1
                        },
                        new
                        {
                            Id = new Guid("c3ce1d4d-9a6f-4d5d-b2a6-dccf92afb9c2"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Instrument de musique"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Classe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmeArmure")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ArmureStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Libelle")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ModificateurArmureStart")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.ToTable("Classes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            ArmeArmure = "L’Arquebusier sait manier toutes les armes de contact à une main, les armes à distance et les armes à poudre. Il peut porter jusqu’à la chemise de maille et ne manie pas de bouclier.",
                            ArmureStart = "Armure de cuir",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "L’Arquebusier est un dur à cuire, un soldat ou un mercenaire habitué des champs de bataille. C’est un spécialiste du combat à distance et plus particulièrement des armes à feu et des explosifs.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Arquebusier",
                            ModificateurArmureStart = 2
                        },
                        new
                        {
                            Id = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            ArmeArmure = "Le Barbare sait manier toutes les armes au contact, toutes les armes à distance (sauf les arbalètes et les armes d’une technologie trop complexe). Il peut porter jusqu’à l’armure de cuir et manier le bouclier.",
                            ArmureStart = "Armure de cuir",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Barbare est un combattant sauvage issu d’une culture primitive. Il affronte ses ennemis avec rage sans se cacher derrière une lourde armure.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Barbare",
                            ModificateurArmureStart = 2
                        },
                        new
                        {
                            Id = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            ArmeArmure = "Le Barde sait manier les armes à 1 main. Il peut porter jusqu’à l’armure de cuir renforcée et ne peut pas manier le bouclier.",
                            ArmureStart = "Armure de cuir",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Barde est un personnage polyvalent qui utilise la magie et le spectacle pour divertir et parvenir à ses fins. Il est aussi habitué aux ruses qu’à la diplomatie.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Barde",
                            ModificateurArmureStart = 2
                        },
                        new
                        {
                            Id = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            ArmeArmure = "Le Chevalier sait manier toutes les armes de contact, mais il dédaigne les armes à distance qu’il considère comme des armes de couard. Il sait manier le bouclier et peut porter toutes les armures jusqu’à l’armure de plaques complète.",
                            ArmureStart = "Armure de demi-plaque",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Chevalier est un noble guerrier errant, monté sur un puissant destrier et protégé par une armure lourde. Il parcourt la campagne en quête de torts à redresser et d’occasions de mettre son courage à l’épreuve.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Chevalier",
                            ModificateurArmureStart = 6
                        },
                        new
                        {
                            Id = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            ArmeArmure = "Le Druide sait manier la dague, le gourdin, le bâton de Druide (équivalent à un bâton ferré), l’épieu, le javelot et l’arc court. Il peut porter l’armure de cuir et peut manier le petit bouclier en bois (DEF+1).",
                            ArmureStart = "Armure de cuir",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Druide est un prêtre de la nature qui défend sa pureté originelle et tire ses pouvoirs de la vie, des animaux et des plantes.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Druide",
                            ModificateurArmureStart = 2
                        },
                        new
                        {
                            Id = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            ArmeArmure = "L’Ensorceleur sait manier la dague et le bâton ferré. Il ne peut porter aucune armure (sauf si elle est faite de tissu) et ne peut pas manier le bouclier.",
                            ArmureStart = "Armure de tissu",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "L’Ensorceleur tire son pouvoir d’un talent inné pour la magie. Il pratique une magie subtile à base de tromperie et de contrôle, et possède peu de sorts de destruction massive.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Ensorceleur",
                            ModificateurArmureStart = 0
                        },
                        new
                        {
                            Id = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            ArmeArmure = "Le Forgesort sait manier la dague, le bâton ferré, le marteau et l’arbalète légère. Il peut porter une armure de cuir simple seulement et ne peut pas manier de bouclier.",
                            ArmureStart = "Armure de tissu",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "À la fois artisan et enchanteur, artiste et magicien, le Forgesort lie les énergies occultes à la matière qu’il façonne pour créer des artefacts magiques ou des breuvages aux propriétés fantastiques.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Forgesort",
                            ModificateurArmureStart = 0
                        },
                        new
                        {
                            Id = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            ArmeArmure = "Le Guerrier sait manier toutes les armes de contact et toutes les armes à distance. Il peut porter jusqu’à l’armure de demi-plaque et manier le bouclier.",
                            ArmureStart = "Armure de mailles",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Guerrier est un combattant émérite qui n’a pas peur du danger et qui affronte ses ennemis l’arme à la main. De tous les profils de combattant, il est le plus spécialisé et le plus complet dans l’art du combat au corps à corps.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Guerrier",
                            ModificateurArmureStart = 5
                        },
                        new
                        {
                            Id = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            ArmeArmure = "Le Magicien sait manier la dague et le bâton ferré et ne porte que des vêtements en tissu, donc aucune armure",
                            ArmureStart = "Armure de tissu",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Magicien n’est pas qu’un rat de bibliothèque. Il fait aussi appel à ses sorts pour se débarrasser de ses ennemis et pour aider ses compagnons.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Magicien",
                            ModificateurArmureStart = 0
                        },
                        new
                        {
                            Id = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            ArmeArmure = "Le Moine ne peut pas porter d’armure. Il sait manier toutes les armes, y compris celles à 2 mains, sauf les armes à poudre. Mais la plupart des Moines n’y font pas appel et sont plus efficaces à mains nues.",
                            ArmureStart = "Armure de tissu",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Moine combat à mains nues et utilise le contrôle qu’il a sur son esprit et son corps pour transformer ce dernier en arme de chair.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Moine",
                            ModificateurArmureStart = 0
                        },
                        new
                        {
                            Id = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            ArmeArmure = "Le Nécromancien sait manier la dague et le bâton ferré. Il ne peut porter aucune armure (sauf si celle-ci est faite de tissu) et ne peut pas manier le bouclier.",
                            ArmureStart = "Armure de tissu",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Nécromancien est un lanceur de sorts qui s’intéresse aux forces obscures et au pouvoir de la mort. Les Nécromanciens sont généralement considérés comme maléfiques et sont peu appréciés. Interprétez-le de façon subtile afin d’en faire un personnage plutôt sombre ou désespéré, mais pas forcément \"mauvais\" !\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Nécromancien",
                            ModificateurArmureStart = 0
                        },
                        new
                        {
                            Id = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            ArmeArmure = "Le Prêtre sait manier les armes contondantes à une main (marteau, masse) plus une arme sacrée qui dépend de son dieu. Il peut porter jusqu'à une chemise de mailles et manier le petit ou le grand bouclier (au choix du MJ en fonction de la divinité).",
                            ArmureStart = "Chemise de maille",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Prêtre utilise l’énergie transmise par son dieu pour mener à bien ses missions avec la force de la foi mais aussi celle des armes si nécessaire.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Prêtre",
                            ModificateurArmureStart = 4
                        },
                        new
                        {
                            Id = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            ArmeArmure = "Le Rôdeur sait manier les armes de contact à une main et toutes les armes à distance, il peut porter toutes les armures à base de cuir mais ne manie pas de bouclier.",
                            ArmureStart = "Armure de cuir renforcée",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Rôdeur est à l’aise dans les forêts ténébreuses, où il traque les animaux dangereux et les créatures monstrueuses ou, au contraire, se fait l’ami des bêtes et le protecteur des lieux sauvages.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Rôdeur",
                            ModificateurArmureStart = 3
                        },
                        new
                        {
                            Id = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            ArmeArmure = "Le Voleur sait manier les armes de contact à une main et toutes les armes à distance. Il peut seulement porter une armure de cuir simple et ne manie pas de bouclier.",
                            ArmureStart = "Armure de cuir",
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Voleur crochète les portes, détecte les pièges et préfère piller les cadavres des ennemis que de se salir les mains pendant le combat.\r\n",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            Libelle = "Voleur",
                            ModificateurArmureStart = 2
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.FichePersoChroniquesOublies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<Guid?>("PartieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PoidKg")
                        .HasColumnType("int");

                    b.Property<int>("PvEnCours")
                        .HasColumnType("int");

                    b.Property<int>("PvMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RaceLibelle")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TailleCm")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.HasIndex("PartieId");

                    b.HasIndex("RaceId");

                    b.HasIndex("UserId");

                    b.ToTable("FichesPersoChroniquesOublies", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.Jointures.JoinFichePersoChroniquesOubliesClasse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("FichePersoChroniquesOubliesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("FichePersoChroniquesOubliesId");

                    b.ToTable("JoinFichePersoChroniquesOubliesClasses", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.Jointures.JoinFichePersoChroniquesOubliesVoie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("FichePersoChroniquesOubliesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FichePersoChroniquesOubliesId");

                    b.HasIndex("VoieId");

                    b.ToTable("JoinFichePersoChroniquesOubliesVoies", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.VoieChroniquesOublies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Libelle")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.ToTable("VoieChroniquesOublies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0386a871-cf49-4077-9525-9426dc14116a"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l'artilleur"
                        },
                        new
                        {
                            Id = new Guid("6a50b874-a765-4c6d-8854-b391d8a446fa"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des explosifs"
                        },
                        new
                        {
                            Id = new Guid("896ce611-3ece-4efe-99d3-eb89f3cd8358"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du champs de bataille"
                        },
                        new
                        {
                            Id = new Guid("3f9dc814-e5f8-4872-9b03-fc9a10a3c134"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du pistolero"
                        },
                        new
                        {
                            Id = new Guid("242d65cc-ec94-4924-b9f9-1b7da767be57"),
                            ClasseId = new Guid("88a45295-7a95-487e-b881-fb9e0580a2a5"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la Précision"
                        },
                        new
                        {
                            Id = new Guid("4b83c273-170d-4cdf-ba27-46ea7ee53104"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la brute"
                        },
                        new
                        {
                            Id = new Guid("a68a8347-d8a3-4166-92f1-068542471942"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du pagnes"
                        },
                        new
                        {
                            Id = new Guid("d3df1f26-acd5-4778-bfcb-2cfc5f13d32e"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du pourfendeur"
                        },
                        new
                        {
                            Id = new Guid("6526792f-73df-4bcd-93f4-61a118306e05"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du primitif"
                        },
                        new
                        {
                            Id = new Guid("6522263c-bd63-43b4-b861-c6afc6b8c2df"),
                            ClasseId = new Guid("0b7fd2d0-c2ad-4492-ab38-f741174d5a6d"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la rage"
                        },
                        new
                        {
                            Id = new Guid("30d0645e-c314-4a2e-bbdf-027cb116bd48"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l'escrime"
                        },
                        new
                        {
                            Id = new Guid("8437ddd7-3735-4ab3-9f2e-a36fa1c545ad"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du musicien"
                        },
                        new
                        {
                            Id = new Guid("a4f66035-8813-4cc2-baf2-68bd3245651c"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du saltimbanque"
                        },
                        new
                        {
                            Id = new Guid("8ec3f722-c4ba-4686-93d4-7ddb429c766d"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la séduction"
                        },
                        new
                        {
                            Id = new Guid("af7f4ed7-a88f-4770-b529-e86b60141789"),
                            ClasseId = new Guid("91b825c3-3e5a-4e1b-8724-daf18ea27c6a"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du vagabond"
                        },
                        new
                        {
                            Id = new Guid("47788de0-28be-470f-b149-5ed087db1f3a"),
                            ClasseId = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la guerre"
                        },
                        new
                        {
                            Id = new Guid("ef0fc838-dfc8-4b86-a91f-1cacd56375d1"),
                            ClasseId = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du héro"
                        },
                        new
                        {
                            Id = new Guid("80449956-ec6c-4df1-b15c-27f99879be26"),
                            ClasseId = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du meneur d'home"
                        },
                        new
                        {
                            Id = new Guid("c215d7a1-dc5c-4e6d-96e2-684c4c68d73f"),
                            ClasseId = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du Cavalier"
                        },
                        new
                        {
                            Id = new Guid("f09f1552-4ac4-4dd3-bef5-da23e25f7d14"),
                            ClasseId = new Guid("c67e5709-a257-4dcd-9250-6c2786327091"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la noblesse"
                        },
                        new
                        {
                            Id = new Guid("b8a9904a-a3bc-455a-a332-e4bb25019446"),
                            ClasseId = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des animaux"
                        },
                        new
                        {
                            Id = new Guid("88c40ede-afb8-4896-94f5-46006413f52e"),
                            ClasseId = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du fauve"
                        },
                        new
                        {
                            Id = new Guid("0b6dcbe7-1bbd-4be1-acec-c1da36e2211a"),
                            ClasseId = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la nature"
                        },
                        new
                        {
                            Id = new Guid("83fd315f-81cb-4319-93c9-7592f591b9a3"),
                            ClasseId = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du protecteur"
                        },
                        new
                        {
                            Id = new Guid("877805f5-6848-481e-91f9-5a73a12a6831"),
                            ClasseId = new Guid("a91093ab-cdec-4d36-8e30-9393a955c382"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des végétaux"
                        },
                        new
                        {
                            Id = new Guid("ddb271b5-c0d0-4938-93bc-5af13f81eb6b"),
                            ClasseId = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l'air"
                        },
                        new
                        {
                            Id = new Guid("abd8238a-53a7-4b6e-8c3d-284b51fcf822"),
                            ClasseId = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la divination"
                        },
                        new
                        {
                            Id = new Guid("b24cf994-3b21-4835-a1ac-0555adc1a1da"),
                            ClasseId = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l'envoûteur"
                        },
                        new
                        {
                            Id = new Guid("323d7866-e565-4d85-9eac-e7cb4d9ae814"),
                            ClasseId = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des illusions"
                        },
                        new
                        {
                            Id = new Guid("dce8ca92-fa58-4828-8422-f103ff74bd42"),
                            ClasseId = new Guid("2048962d-f0d3-460b-a054-fae5ea578cc3"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l'invocation"
                        },
                        new
                        {
                            Id = new Guid("71c3e812-2e10-43ea-8173-f3d6e54647c6"),
                            ClasseId = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du bouclier"
                        },
                        new
                        {
                            Id = new Guid("6f96951a-e0b1-4b33-a3f1-d8d6038ec296"),
                            ClasseId = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du combat"
                        },
                        new
                        {
                            Id = new Guid("acc69e02-e4ea-4958-9334-d7cd3d5c4fce"),
                            ClasseId = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du maître d'armes"
                        },
                        new
                        {
                            Id = new Guid("f5b824ec-f37e-4c83-869e-3db271170855"),
                            ClasseId = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la résistance"
                        },
                        new
                        {
                            Id = new Guid("4e271e7d-3a6b-4060-b033-8b98a7d04bf7"),
                            ClasseId = new Guid("b27608e8-b453-4397-8d41-7c3c3d9af293"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du soldat"
                        },
                        new
                        {
                            Id = new Guid("cfd85b3e-b0d1-4da9-a63c-db843e10415c"),
                            ClasseId = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des artefacts"
                        },
                        new
                        {
                            Id = new Guid("fb1ee967-6b28-467a-b9e7-01dc6819c94c"),
                            ClasseId = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des élixirs"
                        },
                        new
                        {
                            Id = new Guid("59231f1d-b441-404d-a313-cfed79971428"),
                            ClasseId = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du métal"
                        },
                        new
                        {
                            Id = new Guid("d5b96164-b70f-4e70-bf16-44e70e53c0cf"),
                            ClasseId = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du golem"
                        },
                        new
                        {
                            Id = new Guid("d642eda0-f216-4fa6-ba1a-adb20d5f5a70"),
                            ClasseId = new Guid("7b00f70a-4e76-4d4c-8df5-c7ffe0022c20"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des runes"
                        },
                        new
                        {
                            Id = new Guid("e339151c-7dfd-4adf-abf8-c92a52d679cf"),
                            ClasseId = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la magie des arcanes"
                        },
                        new
                        {
                            Id = new Guid("1cf09568-5bfc-48a5-8371-df419a554869"),
                            ClasseId = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la magie destructrice"
                        },
                        new
                        {
                            Id = new Guid("a33d2b95-b078-4931-90db-fdf762806afe"),
                            ClasseId = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la magie élémentaire"
                        },
                        new
                        {
                            Id = new Guid("a2c12d80-78af-42d7-afe4-85631151f043"),
                            ClasseId = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la magie protectrice"
                        },
                        new
                        {
                            Id = new Guid("fee00c48-7283-4f2b-87f5-a5a1cb589acf"),
                            ClasseId = new Guid("1a4b34b8-2752-4062-a0e5-59695a79d9c7"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la magie universelle"
                        },
                        new
                        {
                            Id = new Guid("25af40ce-083a-4e2d-bdc3-d72342e3a149"),
                            ClasseId = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la foi"
                        },
                        new
                        {
                            Id = new Guid("19d16644-0aa1-4379-aaf7-196376007772"),
                            ClasseId = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la guerre"
                        },
                        new
                        {
                            Id = new Guid("b16a7caf-1e14-45b2-bedc-2f6c472b9135"),
                            ClasseId = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la prière"
                        },
                        new
                        {
                            Id = new Guid("f51af3e7-73a0-43c8-9b25-1f04bc5b07fd"),
                            ClasseId = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie des soins"
                        },
                        new
                        {
                            Id = new Guid("c8a1ba87-c028-4360-a54a-de60bc9019fe"),
                            ClasseId = new Guid("f5d228cd-75ee-4462-a2a7-102383250bdd"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la spiritualité"
                        },
                        new
                        {
                            Id = new Guid("4759b912-a754-433b-8e34-a1a985d570a6"),
                            ClasseId = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’énergie vitale"
                        },
                        new
                        {
                            Id = new Guid("1be9f71e-99a8-4a5b-a93c-95096ea6e685"),
                            ClasseId = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la maîtrise"
                        },
                        new
                        {
                            Id = new Guid("2a304b61-c660-4507-8e5d-b565f89462d2"),
                            ClasseId = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la méditation"
                        },
                        new
                        {
                            Id = new Guid("b6ccc6fc-7bed-4c4d-a295-631581d7fdd9"),
                            ClasseId = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du poing"
                        },
                        new
                        {
                            Id = new Guid("9ec521ed-a5a7-4446-862f-c3e3485474c3"),
                            ClasseId = new Guid("e6d9a3ba-1dcc-4e33-859f-615dbbf3717f"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du vent"
                        },
                        new
                        {
                            Id = new Guid("31d4b168-739a-424e-9d5c-fbf9bed776eb"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’archer"
                        },
                        new
                        {
                            Id = new Guid("7464a48a-2422-4403-82a6-a3ab1dab957a"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du compagnon animal"
                        },
                        new
                        {
                            Id = new Guid("4768bf3a-f1da-4e09-af9e-d82766108d25"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’escarmouche"
                        },
                        new
                        {
                            Id = new Guid("4cfa800e-b320-48c1-b5f0-3729c3dda901"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la survie"
                        },
                        new
                        {
                            Id = new Guid("2823a719-d3a3-43fe-b842-dcd24513964b"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du traqueur"
                        },
                        new
                        {
                            Id = new Guid("5244ff62-6c95-4ffd-b5a6-39ac435a2922"),
                            ClasseId = new Guid("6e3fd8e2-1680-4a8b-b928-1e48acc20861"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du montreur d’ours"
                        },
                        new
                        {
                            Id = new Guid("a1fb9733-785e-409d-9890-b9483530dfc6"),
                            ClasseId = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’assassin"
                        },
                        new
                        {
                            Id = new Guid("1ecb8777-04ff-48b9-a51d-a92e17fcfa2d"),
                            ClasseId = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’aventurier"
                        },
                        new
                        {
                            Id = new Guid("45247844-6883-426d-a301-d129bebf4f3a"),
                            ClasseId = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du déplacement"
                        },
                        new
                        {
                            Id = new Guid("35e3c04d-de8d-4ec1-a4e1-81e797545579"),
                            ClasseId = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du roublard"
                        },
                        new
                        {
                            Id = new Guid("db5e27d2-4960-4bfe-8ed6-b30ad9564661"),
                            ClasseId = new Guid("0441eff4-f2ca-4757-b02e-3e1043cf4234"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du spadassin"
                        },
                        new
                        {
                            Id = new Guid("54516d5f-6afe-4a03-a36f-45c1a29ea573"),
                            ClasseId = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du démon"
                        },
                        new
                        {
                            Id = new Guid("4b4ced79-95f3-4107-9870-e92aab440c49"),
                            ClasseId = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la mort"
                        },
                        new
                        {
                            Id = new Guid("8b600d39-44e3-4d4b-9ddc-548cf6a75205"),
                            ClasseId = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de l’outre-tombe"
                        },
                        new
                        {
                            Id = new Guid("81b9d4ed-1cd9-4ee5-a3b0-8b2610a32e82"),
                            ClasseId = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie du sang"
                        },
                        new
                        {
                            Id = new Guid("6ecdaa1f-0ed7-410c-b113-467461811b28"),
                            ClasseId = new Guid("ded836b7-688e-4757-b100-1dc146142846"),
                            DateCrea = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libelle = "Voie de la sombre magie"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Jeu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Jeux", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fc4e9f5-e8a8-4269-9dbc-2e5c4af3b2b1"),
                            DateCrea = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le jeu de rôle Dungeons & Dragons consiste à narrer des aventures dans des mondes peuplés de guerriers et de magiciens. Tout comme les jeux où l'on s'amuse à faire semblant, D&D repose sur l'imagination.\r\n\r\nDans ce monde fantastique, les possibilités sont infinies.",
                            Nom = "Donjons & Dragons"
                        },
                        new
                        {
                            Id = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            DateCrea = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chroniques Oubliées, conçue pour la découverte du JdR, est la version modernisée et simplifiée (mais pas simpliste) du premier des jeux de rôle. Aux mécaniques de base viennent s'ajouter des \"briques\" modulaires, optionnelles, pour enrichir l'expérience de jeu.\r\n\r\nSi vous souhaitiez découvrir (ou faire découvrir) le jeu de rôle ou si vous êtes à la recherche d'un jeu rapide à mettre en place pour renouer avec le loisir, ne cherchez pas plus loin !\r\n\r\nChroniques Oubliées se décline aujourd'hui dans sa version Fantasy (univers médiéval-fantastique), Contemporain (multiples univers possibles couvrant la période 1900-2100 : horreur lovecraftienne, pulp, zombies, vampires, super-héros, espionnage, policier, cyberpunk...) et Galactique (univers de science-fiction en trois époques : Space Opera, temps de la colonisation galactique et Hard Science).",
                            Nom = "Chroniques Oublies"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("NombreParticipant")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.HasIndex("UserId");

                    b.ToTable("Parties", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("JeuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RaceLibelle")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("JeuId");

                    b.ToTable("Races", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "L’humain se distingue par sa capacité d’adaptation et son instinct qui le pousse à coloniser tous les territoires qui l’entourent. La Race humaine est la plus représentée et la plus répandue dans les zones dites \"civilisées\".  Les humains sont de jeunes loups ignorants, ils croissent et se multiplient sans aucun respect pour l’équilibre du monde, leur égoïsme et leur égocentrisme semblent sans limite. Ils mèneront le monde entier à la catastrophe si personne ne les arrête.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Humains"
                        },
                        new
                        {
                            Id = new Guid("9c8d7e6f-5b4a-1234-cde9-0f1e2d3c4b5a"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Haut-elfe est un être féerique qui vit extrêmement longtemps. Il est méprisant envers les Nains et arrogant envers les autres races. Proche de la nature, il maîtrise aussi bien les arts de la magie que ceux de la guerre.  Les Elfes se croient supérieurs à tous les autres, ce sont de puissants magiciens mais leur cœur est sans pitié. Ils obéissent à de très anciennes règles et à des serments incompréhensibles pour les Races à l’espérance de vie ordinaire.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Elfe, haut"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-47a8-90ab-cdef12345678"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Nain est petit mais robuste. Célèbre pour sa barbe, il aime les profondeurs de la terre, dont il extrait des métaux et des pierres précieuses. Isolé, il est généralement ouvert et chaleureux, mais la société naine peut paraître sévère car le travail et l’entraînement militaire y sont des obligations.  Les Nains aiment amasser de l’or et boire de la bière en compagnie d’autres Nains. Ils sont un peu rustres et très susceptibles, un Nain peut se mettre en colère et devenir violent pour des raisons qui semblent étranges voire futiles à un autre peuple…",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Nains"
                        },
                        new
                        {
                            Id = new Guid("01234567-89ab-cdef-0123-456789abcdef"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Demi-elfe a hérité des qualités de ses deux parents (humain et Elfe). Il est généralement traité avec condescendance parmi les Elfes et est considéré comme un Elfe parmi les humains.  Les Demi-elfes sont des artistes hors-pair dotés d'une grande sensibilité. Toutefois, attention car ils sont beaux parleurs et manipulateurs : cachez vos filles et vos femmes, ils ont brisé plus d'un cœur et corrompu bien des dames de réputation vertueuse.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Demi-Elfes"
                        },
                        new
                        {
                            Id = new Guid("fedcba98-7654-3210-fedc-ba9876543210"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Halfelin est la plus petite des races jouables. Toujours bon vivant, souvent vif, curieux, et parfois farceur, c’est un incompris que les autres Races considèrent souvent comme turbulent, pénible, voire parfois comme un voleur.  Les Halfelins sont inoffensifs et ne pensent qu’à bien manger. Toutefois, ne perdez jamais de vue leurs mains car se sont aussi des voleurs sans scrupules.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Halfelins"
                        },
                        new
                        {
                            Id = new Guid("13579bdf-2468-ace0-bdf1-3579bdf24680"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Demi-orque Le Demi-orque est de grande taille. Issu de l’union souvent forcée d’une humaine et d’un Orque, il possède une force physique hors du commun. Il est généralement méprisé par les autres races, en particulier par les Nains et les Elfes.  Les Demi-orques sont violents, sales et stupides, ils en veulent au monde entier de leur ignoble naissance et mieux vaut les éviter",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Demi-orques"
                        },
                        new
                        {
                            Id = new Guid("11223344-5566-7788-99aa-bbccddeeff00"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "L’Elfe sylvain est issu d’une culture différente de celle des Hauts-elfes. Légèrement plus petits, ils vivent au plus profond des forêts, s’abritant dans les arbres et vivant simplement de la chasse et de la cueillette. Moins arrogants que leurs cousins Hauts-elfes, ils sont cependant beaucoup plus méfiants. Ils maitrisent particulièrement l’art du camouflage et l’utilisation de l’arc.  Les Elfes sylvains sont de redoutables archers, ils détestent les cités et les gens qui y vivent, ils peuvent tuer d’une flèche dans le dos un paysan juste parce qu'il a coupé le mauvais arbre.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Elfe, sylvain"
                        },
                        new
                        {
                            Id = new Guid("abcdef12-3456-7890-abcd-ef1234567890"),
                            DateCrea = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateMaj = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Le Gnome est une créature de petite taille pourvue d’un gros nez, d’une bonne nature et d’une curiosité insatiable pour la magie et les sciences. C’est un compagnon souvent agréable bien qu’un peu original. Les Nains et les Halfelins l’apprécient, tandis que les \"grandes\" races se montrent plutôt indifférentes à leur égard.  Les Gnomes sont sympathiques mais à moitié fous, méfiez-vous comme de la peste de leurs inventions ou de leurs projets farfelus.",
                            JeuId = new Guid("1c474c24-f5c9-470e-9b91-046b639275c3"),
                            RaceLibelle = "Gnome"
                        });
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateMaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("ExterneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.ArmeStart", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Classe", "Classe")
                        .WithMany("ArmesStarts")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Classe", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("Classes")
                        .HasForeignKey("JeuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.FichePersoChroniquesOublies", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("FichesPersoChroniquesOublies")
                        .HasForeignKey("JeuId");

                    b.HasOne("MellmothJdr.DAL.Entities.Partie", "Partie")
                        .WithMany("FichePersoChroniqueOublies")
                        .HasForeignKey("PartieId");

                    b.HasOne("MellmothJdr.DAL.Entities.Race", "Race")
                        .WithMany("FichesPersoChroniquesOublies")
                        .HasForeignKey("RaceId");

                    b.HasOne("MellmothJdr.DAL.Entities.User", "User")
                        .WithMany("FichePersoChroniqueOublies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");

                    b.Navigation("Partie");

                    b.Navigation("Race");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.Jointures.JoinFichePersoChroniquesOubliesClasse", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Classe", "Classe")
                        .WithMany("JoinFichePersoChroniquesOubliesClasses")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.FichePersoChroniquesOublies", "FichePersoChroniquesOublies")
                        .WithMany("JoinFichePersoChroniquesOubliesClasses")
                        .HasForeignKey("FichePersoChroniquesOubliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("FichePersoChroniquesOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.Jointures.JoinFichePersoChroniquesOubliesVoie", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.FichePersoChroniquesOublies", "FichePersoChroniquesOublies")
                        .WithMany("JoinFichePersoChroniquesOubliesVoies")
                        .HasForeignKey("FichePersoChroniquesOubliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.VoieChroniquesOublies", "Voie")
                        .WithMany("JoinFichePersoChroniquesOubliesVoies")
                        .HasForeignKey("VoieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FichePersoChroniquesOublies");

                    b.Navigation("Voie");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.VoieChroniquesOublies", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Classe", "Classe")
                        .WithMany("VoieChroniquesOublies")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("Parties")
                        .HasForeignKey("JeuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MellmothJdr.DAL.Entities.User", "User")
                        .WithMany("Parties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.HasOne("MellmothJdr.DAL.Entities.Jeu", "Jeu")
                        .WithMany("Races")
                        .HasForeignKey("JeuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeu");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Classe", b =>
                {
                    b.Navigation("ArmesStarts");

                    b.Navigation("JoinFichePersoChroniquesOubliesClasses");

                    b.Navigation("VoieChroniquesOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.FichePersoChroniquesOublies", b =>
                {
                    b.Navigation("JoinFichePersoChroniquesOubliesClasses");

                    b.Navigation("JoinFichePersoChroniquesOubliesVoies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.FichesPersos.ChroniquesOublies.VoieChroniquesOublies", b =>
                {
                    b.Navigation("JoinFichePersoChroniquesOubliesVoies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Jeu", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("FichesPersoChroniquesOublies");

                    b.Navigation("Parties");

                    b.Navigation("Races");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Partie", b =>
                {
                    b.Navigation("FichePersoChroniqueOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.Race", b =>
                {
                    b.Navigation("FichesPersoChroniquesOublies");
                });

            modelBuilder.Entity("MellmothJdr.DAL.Entities.User", b =>
                {
                    b.Navigation("FichePersoChroniqueOublies");

                    b.Navigation("Parties");
                });
#pragma warning restore 612, 618
        }
    }
}
